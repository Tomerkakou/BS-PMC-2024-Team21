pipeline {
    agent {
        docker { image 'python:3.11-slim' }
    }
    stages {
        stage('Install Flask Dependencies') {
            agent {
                docker { image 'python:3.11-slim' }
            }
            steps {
                script {
                    dir('be') {
                        sh 'pip install -r requirements.txt'
                    }
                }
            }
        }

        stage('Build and Install React App') {
            agent {
                docker {
                    image 'node:16.17.1-alpine3.16'
                    args '-p 3000:3000'
                }
            }
            steps {
                script {
                    dir('fe') {
                        sh 'npm install'
                        sh 'npm run build'
                    }
                }
            }
        }
        stage('Start Flask and React') {
            parallel {
                stage('Flask') {
                    agent {
                        docker { image 'python:3.11-slim' }
                    }
                    steps {
                        script {
                            dir('be') {
                                sh 'flask run &'
                            }
                        }
                    }
                }
                stage('React') {
                    agent {
                        docker {
                            image 'node:16.17.1-alpine3.16'
                            args '-p 3000:3000'
                        }
                    }
                    steps {
                        script {
                            dir('fe') {
                                sh 'npm start &'
                            }
                        }
                    }
                }
            }
        }

        stage('Test apps') {
            steps {
                script {
                    // Test Flask app
                    sh 'curl -f http://localhost:5000'

                    // Test React app
                    sh 'curl -f http://localhost:3000'
                }
            }
        }
    }

    post {
        always {
            // Clean up after the pipeline
            deleteDir()
        }
    }
}
